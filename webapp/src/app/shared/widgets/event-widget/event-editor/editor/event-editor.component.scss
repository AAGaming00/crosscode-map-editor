@use '~@angular/material' as mat;

$size: 26px;

:host {
	height: 100%;
	overflow-y: auto;
}

.event-container {
	height: 100%;
	overflow: auto;
}

$color1: #3a3a3a;
$color2: #343434;
.event-inner-container > .mat-tree {
	min-height: 100%;
	height: fit-content;
	padding-left: 0px;
	outline: none;
	background-color: #2a2a2a;
}

.event-inner-container .mat-tree-node {
	display: block;
	flex: none;
	min-height: auto;
	overflow: hidden;

	cursor: move;
	&.cdk-drag-placeholder {
	  opacity: 0;
	  transition-duration: 0s; //The placeholder should move instantly so the dragged element can transition to the correct position on release
	}
}

.mat-tree-node:nth-child(even) {
	background-color: $color2; //Starts with brighter color (which happens to be $color2)
	//repeating-linear-gradient(180deg, #3a3a3a, #3a3a3a 26px, #343434 26px, #343434 52px)
}

.mat-tree-node:nth-child(odd) {
	background-color: $color1;
}

.cdk-drop-list-dragging .mat-tree-node:not(.cdk-drag-placeholder) {
	transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);
}

.cdk-drag-animating {
	transition: transform 200ms cubic-bezier(0, 0, 0.2, 1);
}

.cdk-drag-preview {
	@include mat.elevation(12);
	//max-height: $size;
	min-height: $size; //Overrides material tree node default
	//height: $size;
	width: 100%;
	//width: auto !important;
	overflow: hidden;
	//white-space: nowrap;
	background-color: rgba($color2, 0.5);
}